<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Блог TinyOps - jetbrains</title>
    <subtitle>О технологиях, подходах и решении проблем простым языком</subtitle>
    <link rel="self" type="application/atom+xml" href="https://b.tinyops.ru/tags/jetbrains/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://b.tinyops.ru"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2023-07-27T00:00:00+00:00</updated>
    <id>https://b.tinyops.ru/tags/jetbrains/atom.xml</id>
    <entry xml:lang="en">
        <title>Как исправить ошибку - No tests found matching Method в IntelliJ IDEA</title>
        <published>2020-01-15T00:00:00+00:00</published>
        <updated>2023-07-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://b.tinyops.ru/how-to-fix-no-tests-found-matching-method-issue/"/>
        <id>https://b.tinyops.ru/how-to-fix-no-tests-found-matching-method-issue/</id>
        
        <content type="html" xml:base="https://b.tinyops.ru/how-to-fix-no-tests-found-matching-method-issue/">&lt;p&gt;Даже на момент написания статьи в связке JetBrains IDEA + Gradle хватает проблем с окривевшими кэшами.
Причем текст ошибки никак не помогает понять в чем же проблема. Поэтому те, кто давно работает
со всея-IDE от JetBrains знают что скорей всего пришел момент проверки актуальности кэшей (инвалидации) Gradle, либо их очистки.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;oshibka-no-tests-found-matching-method&quot;&gt;Ошибка - No tests found matching Method&lt;&#x2F;h3&gt;
&lt;p&gt;Это исключение можно словить при запуске unit-тестов. Вы запускали тесты и вдруг стало писать эту ошибку.
Опытным путем удалось выявить, что ноги проблемы растут из относительно свежей Gradle фичи - &lt;a href=&quot;https:&#x2F;&#x2F;docs.gradle.org&#x2F;current&#x2F;userguide&#x2F;build_cache.html&quot;&gt;Build cache&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Gradle build cache - это механизм кэширования который нацелен на экономию времени, переиспользуя вывод от предыдущих сборок приложения.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Эта фича включается через файл конфигурации &lt;code&gt;gradle.properties&lt;&#x2F;code&gt;, вот так:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;properties&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-properties &quot;&gt;&lt;code class=&quot;language-properties&quot; data-lang=&quot;properties&quot;&gt;&lt;span&gt;org.gradle.caching=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;На словах звучит круто и на деле сборки становятся быстрей, но проверка актуальности кэша (инвалидация) происходит далеко не всегда.
Чаще всего проблема проявляется после запуска анализа покрытия кода (coverage). Gradle создает каталог &lt;code&gt;out&lt;&#x2F;code&gt; и перестает
видеть изменения в тестах.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;reshenie&quot;&gt;Решение&lt;&#x2F;h2&gt;
&lt;p&gt;Удалить каталоги &lt;code&gt;build&lt;&#x2F;code&gt; и &lt;code&gt;out&lt;&#x2F;code&gt; в корне проекта.&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
