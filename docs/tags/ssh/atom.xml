<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>Блог TinyOps - ssh</title>
	<subtitle>О технологиях, подходах и решении проблем простым языком</subtitle>
	<link href="https://b.tinyops.ru/tags/ssh/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://b.tinyops.ru"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2020-11-15T00:00:00+00:00</updated>
	<id>https://b.tinyops.ru/tags/ssh/atom.xml</id>
	<entry xml:lang="en">
		<title>Настройка безопасности для SSH-сервера</title>
		<published>2020-11-15T00:00:00+00:00</published>
		<updated>2020-11-15T00:00:00+00:00</updated>
		<link href="https://b.tinyops.ru/ssh-server-security-fundamentals/" type="text/html"/>
		<id>https://b.tinyops.ru/ssh-server-security-fundamentals/</id>
		<content type="html">&lt;p&gt;SSH (Secure Shell) - это протокол прикладного уровня с шифрованием трафика, а также самый распространённый протокол 
удалённого доступа к Linux\Unix-серверам. Самая популярная реализация серверной части называется OpenSSH.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;ssh&#x2F;ssh-security.png&quot; alt=&quot;Терминал Linux&quot; title=&quot;Терминал Linux&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Тем не менее, даже самую безопасную систему на свете можно сделать уязвимой благодаря настройке. Во многих дистрибутивах
служба SSH имеет уязвимую конфигурацию.&lt;&#x2F;p&gt;
&lt;p&gt;Две самых распространённых уязвимости:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Разрешён удалённый доступ пользователю &lt;code&gt;root&lt;&#x2F;code&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Не указан список пользователей, которым разрешён доступ.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;В некоторых дистрибутивах разрешён вход для пользователей с пустыми паролями. 
Проблема безопасности усугубляется ещё и тем что по умолчанию команда &lt;code&gt;useradd&lt;&#x2F;code&gt; создаёт пользователя с пустым паролем.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;perebor-loginov-i-parolei&quot;&gt;Перебор логинов и паролей&lt;&#x2F;h2&gt;
&lt;p&gt;Несмотря на то что существуют различные векторы атак на службу SSH, самая популярная атака это перебор логинов и паролей.
Перебор ведут по самым распространённым именам пользователей и паролей: root, admin, user, test и т. д.&lt;&#x2F;p&gt;
&lt;p&gt;В наши дни перебор паролей ведут чаще автоматизированными средствами нежели вручную. Поэтому при входе на удалённый сервер неудивительно
увидеть такую картину: &lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell script&quot; class=&quot;language-shell script &quot;&gt;&lt;code class=&quot;language-shell script&quot; data-lang=&quot;shell script&quot;&gt;[user@pc] # ssh server
Last failed login: Sun Nov 15 16:12:10 MSK 2020 from 112.85.42.174 on ssh:notty
There were 13925 failed login attempts since the last successful login.
Last login: Fri Nov 13 17:08:30 2020 from 123.33.12.100
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Далее мы настроим сервер так чтобы существенно усложнить жизнь злоумышленникам.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;nastroika-minimal-no-rekomenduemoi-konfiguratsii&quot;&gt;Настройка минимально рекомендуемой конфигурации&lt;&#x2F;h2&gt;
&lt;p&gt;Несмотря на то что это минимально-рекомендуемая конфигурация, она отразит более 99% атак на SSH-сервер.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;# Запрещаем вход пользователю root через удалённый доступ
PermitRootLogin no

# Разрешаем подключение только для указанных пользователей
AllowUsers user1 user2 user3

# Меняем порт на нестандартный
Port 14819

# Запрещаем вход пользователям с пустыми паролями
PermitEmptyPasswords no

# Отключаем неиспользуемые способы аутентификации
KerberosAuthentication no
GSSAPIAuthentication no

# Отключаем возможность доступа к графическим приложениям
X11Forwarding no

# Отключаем возможности туннелирования, использовать сервер в качестве промежуточного узла
AllowAgentForwarding no
AllowTcpForwarding no
PermitTunnel no
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;nastroika-usilennoi-bezopasnosti&quot;&gt;Настройка усиленной безопасности&lt;&#x2F;h2&gt;
&lt;p&gt;Помимо минимально рекомендуемых настроек, можно запретить доступ к порту сервиса и отключить вход по логину и паролю. &lt;&#x2F;p&gt;
&lt;h3 id=&quot;blokiruem-dostup-k-portu-ssh-dlia-vsekh-krome-doverennykh-ip&quot;&gt;Блокируем доступ к порту SSH для всех кроме доверенных IP&lt;&#x2F;h3&gt;
&lt;p&gt;Например, с помощью firewalld:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell script&quot; class=&quot;language-shell script &quot;&gt;&lt;code class=&quot;language-shell script&quot; data-lang=&quot;shell script&quot;&gt;firewall-cmd --permanent --zone=public --remove-service=ssh
firewall-cmd --permanent --zone=trusted --add-service=ssh
firewall-cmd --reload
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;otkliuchaem-dostup-po-loginu-i-paroliu&quot;&gt;Отключаем доступ по логину и паролю&lt;&#x2F;h3&gt;
&lt;p&gt;Несмотря на то что аутентификация по ключам это более безопасный и удобный способ работы с удалёнными серверами, большинство 
инженеров предпочитаю работать с логинами и паролями.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;PasswordAuthentication no
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;После этого потребуется создать ключ для пользователя:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell script&quot; class=&quot;language-shell script &quot;&gt;&lt;code class=&quot;language-shell script&quot; data-lang=&quot;shell script&quot;&gt;ssh-keygen
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;А затем скопировать его на удалённый сервер:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell script&quot; class=&quot;language-shell script &quot;&gt;&lt;code class=&quot;language-shell script&quot; data-lang=&quot;shell script&quot;&gt;ssh-copy-id user@server
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;proverka-i-primenenie-nastroek&quot;&gt;Проверка и применение настроек&lt;&#x2F;h2&gt;
&lt;p&gt;Проверяем что настройки корректные:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell script&quot; class=&quot;language-shell script &quot;&gt;&lt;code class=&quot;language-shell script&quot; data-lang=&quot;shell script&quot;&gt;sshd -t
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Если приложение не сообщило об ошибках, значит всё хорошо.&lt;&#x2F;p&gt;
&lt;p&gt;Перезапускаем службу:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell script&quot; class=&quot;language-shell script &quot;&gt;&lt;code class=&quot;language-shell script&quot; data-lang=&quot;shell script&quot;&gt;systemctl restart sshd
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Как исправить глюки в консоли Windows 10 при подключении через SSH</title>
		<published>2020-02-07T00:00:00+00:00</published>
		<updated>2020-02-07T00:00:00+00:00</updated>
		<link href="https://b.tinyops.ru/fix-console-glitches-windows-10/" type="text/html"/>
		<id>https://b.tinyops.ru/fix-console-glitches-windows-10/</id>
		<content type="html">&lt;p&gt;Несколько лет назад Microsoft взяли курс на дружбу с операционными системами на базе ядра Linux. 
Благодаря этому в Windows 10 появились крутые возможности:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Встроенный SSH клиент&lt;&#x2F;strong&gt;&lt;br &#x2F;&gt;
Возможность подключаться через SSH прямо из консоли Windows.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Windows Subsystem for Linux&lt;&#x2F;strong&gt;&lt;br &#x2F;&gt;
Возможность использовать софт под linux прямо из консоли Windows, пусть и с рядом ограничений.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;К сожалению, реализация OpenSSH клиента под Windows работает с ошибками. Одна из главный проблем это мигающий экран
в приложениях с псевдо-графикой. Из такого рода приложений я используют только классический Midnight Commander, поэтому
исправлять проблему будем прежде всего для него. Уверен что решение сработает и для остальных приложений. &lt;&#x2F;p&gt;
&lt;h3 id=&quot;reshenie&quot;&gt;Решение&lt;&#x2F;h3&gt;
&lt;p&gt;Решение простое - использовать SSH клиент из пакета &lt;a href=&quot;https:&#x2F;&#x2F;git-scm.com&#x2F;download&#x2F;win&quot;&gt;Git for Windows&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Устанавливаем набор утилит &lt;a href=&quot;https:&#x2F;&#x2F;git-scm.com&#x2F;download&#x2F;win&quot;&gt;Git for Windows&lt;&#x2F;a&gt;, выбираем все субпакеты в процессе установки&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Добавляем в переменную окружения &lt;code&gt;PATH&lt;&#x2F;code&gt; путь &lt;code&gt;до ssh.exe&lt;&#x2F;code&gt; из пакета &lt;code&gt;Git for Windows&lt;&#x2F;code&gt;:&lt;br &#x2F;&gt;
Желательно добавить в начало значения переменной. Например, вот так:&lt;br &#x2F;&gt;
&lt;img src=&quot;&#x2F;images&#x2F;windows&#x2F;windows-ssh-glitches-path.png&quot; alt=&quot;alt text&quot; title=&quot;Переменные окружения&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Открываем Командную строку заново и пробуем использовать ssh клиент с запуском Midnight Commander&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;windows&#x2F;windows-ssh-glitches-mc.png&quot; alt=&quot;alt text&quot; title=&quot;Midnight Commander&quot; &#x2F;&gt; &lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Все работает как надо :)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pravil-nyi-kurs&quot;&gt;Правильный курс&lt;&#x2F;h3&gt;
&lt;p&gt;Несмотря на известные проблемы со встроенным клиентом SSH и Linux-подсистемой для Windows я искренне верю что
Microsoft выбрали верное направление. Десятки лет администраторы Windows серверов не имели современной командной строки,
с историей команд, поиском, подстановкой и справочной системой на подобие man. Руководство Microsoft не считало нужным
развивать это направление и делало ставку на графические интерфейсы, мол тыкать мышкой всегда понятней и удобней.
Мировой опыт работы с Linux\Unix-системами доказал что это не так. &lt;&#x2F;p&gt;
&lt;p&gt;Я верю что Сатья Наделла, действующий глава Microsoft, доведет интеграцию до уровня production ready.&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
