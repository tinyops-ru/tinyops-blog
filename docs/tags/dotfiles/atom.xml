<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>Блог TinyOps - dotfiles</title>
	<subtitle>О технологиях, подходах и решении проблем простым языком</subtitle>
	<link href="https://b.tinyops.ru/tags/dotfiles/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://b.tinyops.ru"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2021-04-04T00:00:00+00:00</updated>
	<id>https://b.tinyops.ru/tags/dotfiles/atom.xml</id>
	<entry xml:lang="en">
		<title>Как управлять dotfiles</title>
		<published>2021-04-03T00:00:00+00:00</published>
		<updated>2021-04-04T00:00:00+00:00</updated>
		<link href="https://b.tinyops.ru/kak-upravlyat-dotfiles/" type="text/html"/>
		<id>https://b.tinyops.ru/kak-upravlyat-dotfiles/</id>
		<content type="html">&lt;p&gt;Большинство приложений для Linux хранят свою конфигурацию в текстовых файлах. Часть из них хранят файлы в домашнем каталоге пользователя. 
Такого рода файлы обычно называют &amp;quot;dotfiles&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;Многие пользователи хранят их в git, потому что это очень удобно. Можно &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=dotfiles&quot;&gt;найти более 150 тысяч примеров на Github&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;problemy-s-dotfiles&quot;&gt;Проблемы с dotfiles&lt;&#x2F;h3&gt;
&lt;p&gt;Несмотря на простоту текстовых файлов, их использование требует определённого подхода в организации. Примеры таких проблем:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Конфигурация Vim (файл &lt;code&gt;.vimrc&lt;&#x2F;code&gt;) может быть максимально подходить для одного компьютера и быть избыточной для всех остальных.&lt;&#x2F;li&gt;
&lt;li&gt;В ваших dotfiles может быть приватная информация, которую нельзя публиковать в git.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;organizatsionnye-podkhody&quot;&gt;Организационные подходы&lt;&#x2F;h2&gt;
&lt;p&gt;Если вы разработчик, то работа с dotfiles, хранение и усовершенствование, для вас самый долгий проект из всех над которыми вы работали. 
В связи с этим имеет смысл организовать свой проект дисциплинированно, для удобства сопровождения и расширяемости.&lt;&#x2F;p&gt;
&lt;p&gt;Далее — один из подходов.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sistema-kontrolia-versii&quot;&gt;Система контроля версий&lt;&#x2F;h3&gt;
&lt;p&gt;Имеет смысл хранить ваши конфигурационные файлы в системе контроля версий (Version Control System — VCS) и вот почему:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;У вас будет резервная копия, которая убережёт файлы от потери и повреждений:
&lt;ul&gt;
&lt;li&gt;Вышел из строя жёсткий диск&lt;&#x2F;li&gt;
&lt;li&gt;Случайное удаление&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;История изменений:
&lt;ul&gt;
&lt;li&gt;Возможность свободно экспериментировать с настройками и легко откатить изменения&lt;&#x2F;li&gt;
&lt;li&gt;Возможность посмотреть настройки за все время существования ваших dotfiles, даже через несколько лет спустя.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Для dotfiles лучше выделить отдельный каталог — &lt;code&gt;.dotfiles&lt;&#x2F;code&gt; в корне домашней директории. Хранить в системе контроля версий домашний каталог не рекомендуется, т. к. усложнит поддержку dotfiles, а также команда типа &lt;code&gt;git clean&lt;&#x2F;code&gt; может удалить все файлы, и даже те, которые не входят в состав репозитория.&lt;&#x2F;p&gt;
&lt;p&gt;В качестве системы контроля версий подойдёт любая: git, mercurial, svn и т. д. Я использую git.&lt;&#x2F;p&gt;
&lt;p&gt;Несмотря на удобство систем контроля версий, не рекомендуется копировать один в один чужие dotfiles, без понимания того, для чего сделаны те или иные настройки. Dotfiles должны быть написаны под вас, чужие — могут служить источником знаний или вдохновения.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;s-chego-nachat&quot;&gt;С чего начать&lt;&#x2F;h2&gt;
&lt;p&gt;Создадим каталог и репозитарий:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mkdir ~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.dotfiles &amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;cd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.dotfiles
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; init
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Создадим на Github отдельный репозиторий &lt;code&gt;dotfiles&lt;&#x2F;code&gt;. Копируем ссылку и добавляем к локальному:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; remote add origin git@github.com:your-user&#x2F;dotfiles.git
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Для примера добавим конфигурацию vim в наши dotfiles.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mkdir -p ~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.dotfiles&#x2F;vim&#x2F;plugins
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cp ~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.vimrc &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.dotfiles&#x2F;vim
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Добавим в git и запушим изменения на GitHub:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;git checkout main
git add *
git commit -a -m &amp;quot;[+] add .vimrc&amp;quot;
git push
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Здесь стоит отметить, что я использую ветку &lt;code&gt;main&lt;&#x2F;code&gt; вместо &lt;code&gt;master&lt;&#x2F;code&gt;, т. к. так заведено на GitHub.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ustanovka-dotfiles&quot;&gt;Установка dotfiles&lt;&#x2F;h2&gt;
&lt;p&gt;Продолжаем пример с &lt;code&gt;.vimrc&lt;&#x2F;code&gt;-файлом. Удалим текущий и создадим ссылку на тот что хранится в dotfiles:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rm -f ~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.vimrc
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ln -s ~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.dotfiles&#x2F;vim&#x2F;.vimrc &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.vimrc
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Когда ваш репозиторий будет наполнен файлами, имеет смысл написать скрипт, который будет создавать правильные ссылки в домашнем каталоге.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zavisimosti-i-plaginy&quot;&gt;Зависимости и плагины&lt;&#x2F;h2&gt;
&lt;p&gt;Помимо файлов конфигурации для приложений в dotfiles можно хранить удобные скрипты и плагины. Нет смысла добавлять плагины в виде файлов в наш репозиторий, но имеет смысл добавить их в виде суб-модулей.&lt;&#x2F;p&gt;
&lt;p&gt;Я использую плагин &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;preservim&#x2F;nerdtree&quot;&gt;NERDTree&lt;&#x2F;a&gt; для vim. Добавим репозиторий проекта в виде суб-модуля:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; submodule add https:&#x2F;&#x2F;github.com&#x2F;preservim&#x2F;nerdtree vim&#x2F;plugins&#x2F;nerdtree
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;ustanovka-zavisimostei-i-plaginov&quot;&gt;Установка зависимостей и плагинов&lt;&#x2F;h2&gt;
&lt;p&gt;Установка и обновление до последних версий:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; submodule update&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --init --recursive
git&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; submodule update&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --init --remote
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Создаём ссылку (symlink) на каталог с плагинами:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ln -s ~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.dotfiles&#x2F;vim&#x2F;plugins &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.vim&#x2F;plugged
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Каталог &lt;code&gt;~&#x2F;vim&#x2F;plugged&lt;&#x2F;code&gt; может отличаться от вашего, я использую рекомендованный от &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;junegunn&#x2F;vim-plug&quot;&gt;vim-plug&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;spetsifichnye-lokal-nye-nastroiki&quot;&gt;Специфичные локальные настройки&lt;&#x2F;h2&gt;
&lt;p&gt;При использовании dotfiles на множестве машин большая часть конфигурации будет одна и та же. Но возможны небольшие различия.&lt;&#x2F;p&gt;
&lt;p&gt;Например, на одной машине вам нужна поддержка Rust для Vim, а на всех остальных — нет. Также могут отличаться набор закладок для &lt;code&gt;nnn&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Для хранения различий можно использовать разные ветви в git, но это очень быстро превратится в хаос.&lt;&#x2F;p&gt;
&lt;p&gt;Один из подходов — иметь главный репозиторий для dotfiles, с файлами, которые подходят для всех машин, а также отдельный репозиторий dotfiles_local для персональных настроек под каждую машину.&lt;&#x2F;p&gt;
&lt;p&gt;В репозитории &lt;code&gt;dotfiles_local&lt;&#x2F;code&gt; каждая ветвь именуется именем машины. Например, &lt;code&gt;home-pc&lt;&#x2F;code&gt;, &lt;code&gt;work-pc&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kak-podgruzhat-spetsifichnye-nastroiki&quot;&gt;Как подгружать специфичные настройки&lt;&#x2F;h3&gt;
&lt;p&gt;Для bash добавляем в &lt;code&gt;~&#x2F;.bashrc&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-f ~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.bashrc_local &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;then
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;source &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&#x2F;.bashrc_local
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fi
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Для git добавляем в &lt;code&gt;~&#x2F;.gitconfig&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;[include]
	path = ~&#x2F;.gitconfig_local
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Для Vim, добавляем в файл &lt;code&gt;.vimrc&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; $LOCALFILE=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;expand&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;quot;~&#x2F;.vimrc_local&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;filereadable&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;($LOCALFILE)
    source $LOCALFILE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;endif
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;spetsial-nye-skripty&quot;&gt;Специальные скрипты&lt;&#x2F;h2&gt;
&lt;p&gt;Если у вас есть какие-то скрипты, которые вы используете в своей работе, их тоже можно добавить в dotfiles. Например, в каталог &lt;code&gt;.dotfiles&#x2F;bin&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Затем в &lt;code&gt;.bashrc&lt;&#x2F;code&gt; добавляем их в переменную &lt;code&gt;PATH&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PATH&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;.dotfiles&#x2F;bin:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PATH&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;</content>
	</entry>
</feed>
